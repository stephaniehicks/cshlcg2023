{
  "hash": "350db5d81f7f690e88b4f8cd680d516a",
  "result": {
    "markdown": "# Workshop\n\n## Overview\n\nIn this workshop, you will explore spotify songs!\n\nPlease write up your solution using R Markdown and `knitr`. Please **show all your code** for each of the answers to each part.\n\nAt the end of the workshop, we will go over the answers.\n\n## Data\n\nThat data for this part of the assignment comes from [TidyTuesday](https://www.tidytuesday.com), which is a weekly podcast and global [community activity](https://github.com/rfordatascience/tidytuesday) brought to you by the R4DS Online Learning Community. The goal of TidyTuesday is to help R learners learn in real-world contexts.\n\n\n::: {.cell layout-align=\"center\" preview='true'}\n::: {.cell-output-display}\n![Icon from TidyTuesday](https://github.com/rfordatascience/tidytuesday/raw/master/static/tt_logo.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\\[**Source**: [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/static/tt_logo.png)\\]\n\nTo access the data, you need to install the `tidytuesdayR` R package and use the function `tt_load()` with the date of '2020-01-21' to load the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidytuesdayR\")\n```\n:::\n\n\nThis is how you can download the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2020-01-21')\nspotify_songs <- tuesdata$spotify_songs\n```\n:::\n\n\nHowever, if you use this code, you will hit an API limit after trying to compile the document a few times. Instead, I suggest you use the following code below. Here, I provide the code below for you to avoid re-downloading data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\n\n# tests if a directory named \"data\" exists locally\nif(!dir.exists(here(\"data\"))) { dir.create(here(\"data\")) }\n\n# saves data only once (not each time you knit a R Markdown)\nif(!file.exists(here(\"data\",\"spotify_songs.RDS\"))) {\n  url_csv <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv'\n  spotify_songs <- readr::read_csv(url_csv)\n  \n  # save the file to RDS objects\n  saveRDS(spotify_songs, file= here(\"data\",\"spotify_songs.RDS\"))\n}\n```\n:::\n\n\nHere we read in the `.RDS` dataset locally from our computing environment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify_songs <- readRDS(here(\"data\",\"spotify_songs.RDS\"))\nas_tibble(spotify_songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32,833 × 23\n   track_id              track_name track_artist track_popularity track_album_id\n   <chr>                 <chr>      <chr>                   <dbl> <chr>         \n 1 6f807x0ima9a1j3VPbc7… I Don't C… Ed Sheeran                 66 2oCs0DGTsRO98…\n 2 0r7CVbZTWZgbTCYdfa2P… Memories … Maroon 5                   67 63rPSO264uRjW…\n 3 1z1Hg7Vb0AhHDiEmnDE7… All the T… Zara Larsson               70 1HoSmj2eLcsrR…\n 4 75FpbthrwQmzHlBJLuGd… Call You … The Chainsm…               60 1nqYsOef1yKKu…\n 5 1e8PAfcKUYoKkxPhrHqw… Someone Y… Lewis Capal…               69 7m7vv9wlQ4i0L…\n 6 7fvUMiyapMsRRxr07cU8… Beautiful… Ed Sheeran                 67 2yiy9cd2QktrN…\n 7 2OAylPUDDfwRGfe0lYql… Never Rea… Katy Perry                 62 7INHYSeusaFly…\n 8 6b1RNvAcJjQH73eZO4BL… Post Malo… Sam Feldt                  69 6703SRPsLkS4b…\n 9 7bF6tCO3gFb8INrEDcjN… Tough Lov… Avicii                     68 7CvAfGvq4RlIw…\n10 1IXGILkPm0tOCNeq00kC… If I Can'… Shawn Mendes               67 4QxzbfSsVryEQ…\n# ℹ 32,823 more rows\n# ℹ 18 more variables: track_album_name <chr>, track_album_release_date <chr>,\n#   playlist_name <chr>, playlist_id <chr>, playlist_genre <chr>,\n#   playlist_subgenre <chr>, danceability <dbl>, energy <dbl>, key <dbl>,\n#   loudness <dbl>, mode <dbl>, speechiness <dbl>, acousticness <dbl>,\n#   instrumentalness <dbl>, liveness <dbl>, valence <dbl>, tempo <dbl>,\n#   duration_ms <dbl>\n```\n:::\n:::\n\n\nWe can take a glimpse at the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(spotify_songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 32,833\nColumns: 23\n$ track_id                 <chr> \"6f807x0ima9a1j3VPbc7VN\", \"0r7CVbZTWZgbTCYdfa…\n$ track_name               <chr> \"I Don't Care (with Justin Bieber) - Loud Lux…\n$ track_artist             <chr> \"Ed Sheeran\", \"Maroon 5\", \"Zara Larsson\", \"Th…\n$ track_popularity         <dbl> 66, 67, 70, 60, 69, 67, 62, 69, 68, 67, 58, 6…\n$ track_album_id           <chr> \"2oCs0DGTsRO98Gh5ZSl2Cx\", \"63rPSO264uRjW1X5E6…\n$ track_album_name         <chr> \"I Don't Care (with Justin Bieber) [Loud Luxu…\n$ track_album_release_date <chr> \"2019-06-14\", \"2019-12-13\", \"2019-07-05\", \"20…\n$ playlist_name            <chr> \"Pop Remix\", \"Pop Remix\", \"Pop Remix\", \"Pop R…\n$ playlist_id              <chr> \"37i9dQZF1DXcZDD7cfEKhW\", \"37i9dQZF1DXcZDD7cf…\n$ playlist_genre           <chr> \"pop\", \"pop\", \"pop\", \"pop\", \"pop\", \"pop\", \"po…\n$ playlist_subgenre        <chr> \"dance pop\", \"dance pop\", \"dance pop\", \"dance…\n$ danceability             <dbl> 0.748, 0.726, 0.675, 0.718, 0.650, 0.675, 0.4…\n$ energy                   <dbl> 0.916, 0.815, 0.931, 0.930, 0.833, 0.919, 0.8…\n$ key                      <dbl> 6, 11, 1, 7, 1, 8, 5, 4, 8, 2, 6, 8, 1, 5, 5,…\n$ loudness                 <dbl> -2.634, -4.969, -3.432, -3.778, -4.672, -5.38…\n$ mode                     <dbl> 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, …\n$ speechiness              <dbl> 0.0583, 0.0373, 0.0742, 0.1020, 0.0359, 0.127…\n$ acousticness             <dbl> 0.10200, 0.07240, 0.07940, 0.02870, 0.08030, …\n$ instrumentalness         <dbl> 0.00e+00, 4.21e-03, 2.33e-05, 9.43e-06, 0.00e…\n$ liveness                 <dbl> 0.0653, 0.3570, 0.1100, 0.2040, 0.0833, 0.143…\n$ valence                  <dbl> 0.518, 0.693, 0.613, 0.277, 0.725, 0.585, 0.1…\n$ tempo                    <dbl> 122.036, 99.972, 124.008, 121.956, 123.976, 1…\n$ duration_ms              <dbl> 194754, 162600, 176616, 169093, 189052, 16304…\n```\n:::\n:::\n\n\nFor all of the questions below, you can ignore the missing values in the dataset, so e.g. when taking averages, just remove the missing values before taking the average, if needed.\n\n## Tasks\n\nUse functions from `dplyr` and `ggplot2` to answer the following questions.\n\n1.  How many songs are in each genre?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add your solution here\n```\n:::\n\n\n2.  What is average value of `energy` and `acousticness` in the `latin` genre in this dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add your solution here\n```\n:::\n\n\n3.  Calculate the average duration of song (in minutes) across all subgenres. Which subgenre has the longest song on average?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add your solution here\n```\n:::\n\n\n4.  Make two boxplots side-by-side of the `danceability` of songs stratifying by whether a song has a fast or slow tempo. Define fast tempo as any song that has a `tempo` above its median value. On average, which songs are more danceable?\n\n**Hint**: You may find the `case_when()` function useful in this part, which can be used to map values from one variable to different values in a new variable (when used in a `mutate()` call).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Generate some random numbers\ndat <- tibble(x = rnorm(100))\nslice(dat, 1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n        x\n    <dbl>\n1  0.230 \n2 -0.0754\n3 -0.536 \n```\n:::\n\n```{.r .cell-code}\n## Create a new column that indicates whether the value of 'x' is positive or negative\ndat %>%\n        mutate(is_positive = case_when(\n                x >= 0 ~ \"Yes\",\n                x < 0 ~ \"No\"\n        ))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 2\n         x is_positive\n     <dbl> <chr>      \n 1  0.230  Yes        \n 2 -0.0754 No         \n 3 -0.536  No         \n 4 -3.36   No         \n 5  0.491  Yes        \n 6  1.43   Yes        \n 7 -0.0423 No         \n 8 -0.339  No         \n 9  0.201  Yes        \n10  0.192  Yes        \n# ℹ 90 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add your solution here\n```\n:::\n",
    "supporting": [
      "exercises-03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}